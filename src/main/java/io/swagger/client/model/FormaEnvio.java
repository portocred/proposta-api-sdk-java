/*
 * Gestão de Propostas
 * API de Gestão de Propostas.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.IndicativoSimNao;
import java.io.IOException;

/**
 * Entidade representando a forma de envio da proposta.
 */
@ApiModel(description = "Entidade representando a forma de envio da proposta.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-10T12:41:57.739Z")
public class FormaEnvio {
  @SerializedName("porCorreio")
  private IndicativoSimNao porCorreio = null;

  @SerializedName("porEmail")
  private IndicativoSimNao porEmail = null;

  @SerializedName("enderecoEmail")
  private String enderecoEmail = null;

  @SerializedName("porLoja")
  private IndicativoSimNao porLoja = null;

  public FormaEnvio porCorreio(IndicativoSimNao porCorreio) {
    this.porCorreio = porCorreio;
    return this;
  }

   /**
   * Get porCorreio
   * @return porCorreio
  **/
  @ApiModelProperty(value = "")
  public IndicativoSimNao getPorCorreio() {
    return porCorreio;
  }

  public void setPorCorreio(IndicativoSimNao porCorreio) {
    this.porCorreio = porCorreio;
  }

  public FormaEnvio porEmail(IndicativoSimNao porEmail) {
    this.porEmail = porEmail;
    return this;
  }

   /**
   * Get porEmail
   * @return porEmail
  **/
  @ApiModelProperty(value = "")
  public IndicativoSimNao getPorEmail() {
    return porEmail;
  }

  public void setPorEmail(IndicativoSimNao porEmail) {
    this.porEmail = porEmail;
  }

  public FormaEnvio enderecoEmail(String enderecoEmail) {
    this.enderecoEmail = enderecoEmail;
    return this;
  }

   /**
   * Endereço do E-mail.
   * @return enderecoEmail
  **/
  @ApiModelProperty(value = "Endereço do E-mail.")
  public String getEnderecoEmail() {
    return enderecoEmail;
  }

  public void setEnderecoEmail(String enderecoEmail) {
    this.enderecoEmail = enderecoEmail;
  }

  public FormaEnvio porLoja(IndicativoSimNao porLoja) {
    this.porLoja = porLoja;
    return this;
  }

   /**
   * Get porLoja
   * @return porLoja
  **/
  @ApiModelProperty(value = "")
  public IndicativoSimNao getPorLoja() {
    return porLoja;
  }

  public void setPorLoja(IndicativoSimNao porLoja) {
    this.porLoja = porLoja;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FormaEnvio formaEnvio = (FormaEnvio) o;
    return Objects.equals(this.porCorreio, formaEnvio.porCorreio) &&
        Objects.equals(this.porEmail, formaEnvio.porEmail) &&
        Objects.equals(this.enderecoEmail, formaEnvio.enderecoEmail) &&
        Objects.equals(this.porLoja, formaEnvio.porLoja);
  }

  @Override
  public int hashCode() {
    return Objects.hash(porCorreio, porEmail, enderecoEmail, porLoja);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FormaEnvio {\n");
    
    sb.append("    porCorreio: ").append(toIndentedString(porCorreio)).append("\n");
    sb.append("    porEmail: ").append(toIndentedString(porEmail)).append("\n");
    sb.append("    enderecoEmail: ").append(toIndentedString(enderecoEmail)).append("\n");
    sb.append("    porLoja: ").append(toIndentedString(porLoja)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

